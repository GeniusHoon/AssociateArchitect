@startuml common.puml
'================================================================
' Filename: common.puml
' Project: 스마트홈 전기관리 시스템 (Smart Home Power Management System)
' Author: Software Architect (AA 인증과제)
' Description:
'   [v4.0] 사용자의 요청에 따라 재정의된 공통 puml 파일입니다.
'   1. 색상: 기본값 (흑백) / component 배경색 흰색 명시
'   2. 정렬: 가운데 정렬
'   3. 스테레오타입: 요소의 이름 상단에 위치
'   4. Title, Footer 제거
'================================================================

'----------------------------------------------------------------
' 1. Global Styling (전역 스타일 정의)
'----------------------------------------------------------------
skinparam defaultFontName "맑은 고딕"
skinparam defaultFontSize 12
skinparam defaultTextAlignment center
skinparam shadowing false
skinparam ArrowColor #666666
skinparam ArrowThickness 1.5
skinparam NoteBackgroundColor #FFFFE0
skinparam NoteBorderColor #BDBDBD

' 컴포넌트 배경색을 명시적으로 흰색으로 설정합니다.
skinparam component {
    BackgroundColor #FFFFFF
    style uml2
}

'----------------------------------------------------------------
' 2. Reusable Macros (재사용 매크로 정의)
'----------------------------------------------------------------
' <<user>> 스테레오타입을 가진 액터 정의
!define User(alias, name) actor "<<user>>\n==name" as alias

' <<system>> 스테레오타입을 가진 시스템 컴포넌트 정의
!define System(alias, name) component "<<system>>\n==name" as alias

' <<external_system>> 스테레오타입을 가진 외부 시스템 컴포넌트 정의
!define ExtSystem(alias, name) component "<<external_system>>\n==name" as alias

' <<device>> 스테레오타입을 가진 외부 장치 컴포넌트 정의
!define ExtDevice(alias, name) component "<<external_device>>\n==name" as alias

' <<database>> 스테레오타입을 가진 데이터베이스 정의
!define Db(alias, name) database "<<database>>\n==name" as alias

' <<component>> 스테레오타입을 가진 일반 컴포넌트 정의
!define Comp(alias, name) component "<<component>>\n==name" as alias


!define Intf(alias, name) interface "name" as alias

' --- 외부 개체 및 시스템 정의 (영문) ---
Comp(customer, "Customer")
System(smarthome, "SmartHomeEMS")
ExtSystem(supplier, "Power Supplier")
ExtDevice(meter, "Smart Meter")
ExtDevice(appliance, "Home Appliance")
Intf(userI,"userInterface")
Intf(supplierI,"supplierInterface")
Intf(meterI,"meterInterface")
Intf(deviceI,"deviceInterface")

' --- 관계 및 인터페이스 정의 (롤리팝 표기법) ---
customer -( userI
userI -right- smarthome

smarthome -down-( supplierI
supplierI -down- supplier

smarthome -right-( meterI
meterI - meter

smarthome -up-( deviceI
deviceI -up- appliance

' --- 다중성(Multiplicity) 노트 ---
note "100,000 Households" as N1
customer .. N1

note "100,000 Units" as N2
meter .. N2

note "1,500,000 Units" as N3
appliance .. N3

note "1 Company" as N4
supplier .. N4

@enduml